package com.et59.cus.domain.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BsPagestaticExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public BsPagestaticExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	protected BsPagestaticExample(BsPagestaticExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table bs_pagestatic
	 * @abatorgenerated
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andHtmnameIsNull() {
			addCriterion("htmname is null");
			return this;
		}

		public Criteria andHtmnameIsNotNull() {
			addCriterion("htmname is not null");
			return this;
		}

		public Criteria andHtmnameEqualTo(String value) {
			addCriterion("htmname =", value, "htmname");
			return this;
		}

		public Criteria andHtmnameNotEqualTo(String value) {
			addCriterion("htmname <>", value, "htmname");
			return this;
		}

		public Criteria andHtmnameGreaterThan(String value) {
			addCriterion("htmname >", value, "htmname");
			return this;
		}

		public Criteria andHtmnameGreaterThanOrEqualTo(String value) {
			addCriterion("htmname >=", value, "htmname");
			return this;
		}

		public Criteria andHtmnameLessThan(String value) {
			addCriterion("htmname <", value, "htmname");
			return this;
		}

		public Criteria andHtmnameLessThanOrEqualTo(String value) {
			addCriterion("htmname <=", value, "htmname");
			return this;
		}

		public Criteria andHtmnameLike(String value) {
			addCriterion("htmname like", value, "htmname");
			return this;
		}

		public Criteria andHtmnameNotLike(String value) {
			addCriterion("htmname not like", value, "htmname");
			return this;
		}

		public Criteria andHtmnameIn(List<String> values) {
			addCriterion("htmname in", values, "htmname");
			return this;
		}

		public Criteria andHtmnameNotIn(List<String> values) {
			addCriterion("htmname not in", values, "htmname");
			return this;
		}

		public Criteria andHtmnameBetween(String value1, String value2) {
			addCriterion("htmname between", value1, value2, "htmname");
			return this;
		}

		public Criteria andHtmnameNotBetween(String value1, String value2) {
			addCriterion("htmname not between", value1, value2, "htmname");
			return this;
		}

		public Criteria andDynamicurlIsNull() {
			addCriterion("dynamicurl is null");
			return this;
		}

		public Criteria andDynamicurlIsNotNull() {
			addCriterion("dynamicurl is not null");
			return this;
		}

		public Criteria andDynamicurlEqualTo(String value) {
			addCriterion("dynamicurl =", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlNotEqualTo(String value) {
			addCriterion("dynamicurl <>", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlGreaterThan(String value) {
			addCriterion("dynamicurl >", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlGreaterThanOrEqualTo(String value) {
			addCriterion("dynamicurl >=", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlLessThan(String value) {
			addCriterion("dynamicurl <", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlLessThanOrEqualTo(String value) {
			addCriterion("dynamicurl <=", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlLike(String value) {
			addCriterion("dynamicurl like", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlNotLike(String value) {
			addCriterion("dynamicurl not like", value, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlIn(List<String> values) {
			addCriterion("dynamicurl in", values, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlNotIn(List<String> values) {
			addCriterion("dynamicurl not in", values, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlBetween(String value1, String value2) {
			addCriterion("dynamicurl between", value1, value2, "dynamicurl");
			return this;
		}

		public Criteria andDynamicurlNotBetween(String value1, String value2) {
			addCriterion("dynamicurl not between", value1, value2, "dynamicurl");
			return this;
		}

		public Criteria andFilepathIsNull() {
			addCriterion("filepath is null");
			return this;
		}

		public Criteria andFilepathIsNotNull() {
			addCriterion("filepath is not null");
			return this;
		}

		public Criteria andFilepathEqualTo(String value) {
			addCriterion("filepath =", value, "filepath");
			return this;
		}

		public Criteria andFilepathNotEqualTo(String value) {
			addCriterion("filepath <>", value, "filepath");
			return this;
		}

		public Criteria andFilepathGreaterThan(String value) {
			addCriterion("filepath >", value, "filepath");
			return this;
		}

		public Criteria andFilepathGreaterThanOrEqualTo(String value) {
			addCriterion("filepath >=", value, "filepath");
			return this;
		}

		public Criteria andFilepathLessThan(String value) {
			addCriterion("filepath <", value, "filepath");
			return this;
		}

		public Criteria andFilepathLessThanOrEqualTo(String value) {
			addCriterion("filepath <=", value, "filepath");
			return this;
		}

		public Criteria andFilepathLike(String value) {
			addCriterion("filepath like", value, "filepath");
			return this;
		}

		public Criteria andFilepathNotLike(String value) {
			addCriterion("filepath not like", value, "filepath");
			return this;
		}

		public Criteria andFilepathIn(List<String> values) {
			addCriterion("filepath in", values, "filepath");
			return this;
		}

		public Criteria andFilepathNotIn(List<String> values) {
			addCriterion("filepath not in", values, "filepath");
			return this;
		}

		public Criteria andFilepathBetween(String value1, String value2) {
			addCriterion("filepath between", value1, value2, "filepath");
			return this;
		}

		public Criteria andFilepathNotBetween(String value1, String value2) {
			addCriterion("filepath not between", value1, value2, "filepath");
			return this;
		}
	}
}