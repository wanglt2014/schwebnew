package com.et59.cus.domain.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OpenLogExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table open_log
	 * @abatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table open_log
	 * @abatorgenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public OpenLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	protected OpenLogExample(OpenLogExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table open_log
	 * @abatorgenerated
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andAppidIsNull() {
			addCriterion("appid is null");
			return this;
		}

		public Criteria andAppidIsNotNull() {
			addCriterion("appid is not null");
			return this;
		}

		public Criteria andAppidEqualTo(Long value) {
			addCriterion("appid =", value, "appid");
			return this;
		}

		public Criteria andAppidNotEqualTo(Long value) {
			addCriterion("appid <>", value, "appid");
			return this;
		}

		public Criteria andAppidGreaterThan(Long value) {
			addCriterion("appid >", value, "appid");
			return this;
		}

		public Criteria andAppidGreaterThanOrEqualTo(Long value) {
			addCriterion("appid >=", value, "appid");
			return this;
		}

		public Criteria andAppidLessThan(Long value) {
			addCriterion("appid <", value, "appid");
			return this;
		}

		public Criteria andAppidLessThanOrEqualTo(Long value) {
			addCriterion("appid <=", value, "appid");
			return this;
		}

		public Criteria andAppidIn(List<Long> values) {
			addCriterion("appid in", values, "appid");
			return this;
		}

		public Criteria andAppidNotIn(List<Long> values) {
			addCriterion("appid not in", values, "appid");
			return this;
		}

		public Criteria andAppidBetween(Long value1, Long value2) {
			addCriterion("appid between", value1, value2, "appid");
			return this;
		}

		public Criteria andAppidNotBetween(Long value1, Long value2) {
			addCriterion("appid not between", value1, value2, "appid");
			return this;
		}

		public Criteria andApiurlIsNull() {
			addCriterion("apiurl is null");
			return this;
		}

		public Criteria andApiurlIsNotNull() {
			addCriterion("apiurl is not null");
			return this;
		}

		public Criteria andApiurlEqualTo(String value) {
			addCriterion("apiurl =", value, "apiurl");
			return this;
		}

		public Criteria andApiurlNotEqualTo(String value) {
			addCriterion("apiurl <>", value, "apiurl");
			return this;
		}

		public Criteria andApiurlGreaterThan(String value) {
			addCriterion("apiurl >", value, "apiurl");
			return this;
		}

		public Criteria andApiurlGreaterThanOrEqualTo(String value) {
			addCriterion("apiurl >=", value, "apiurl");
			return this;
		}

		public Criteria andApiurlLessThan(String value) {
			addCriterion("apiurl <", value, "apiurl");
			return this;
		}

		public Criteria andApiurlLessThanOrEqualTo(String value) {
			addCriterion("apiurl <=", value, "apiurl");
			return this;
		}

		public Criteria andApiurlLike(String value) {
			addCriterion("apiurl like", value, "apiurl");
			return this;
		}

		public Criteria andApiurlNotLike(String value) {
			addCriterion("apiurl not like", value, "apiurl");
			return this;
		}

		public Criteria andApiurlIn(List<String> values) {
			addCriterion("apiurl in", values, "apiurl");
			return this;
		}

		public Criteria andApiurlNotIn(List<String> values) {
			addCriterion("apiurl not in", values, "apiurl");
			return this;
		}

		public Criteria andApiurlBetween(String value1, String value2) {
			addCriterion("apiurl between", value1, value2, "apiurl");
			return this;
		}

		public Criteria andApiurlNotBetween(String value1, String value2) {
			addCriterion("apiurl not between", value1, value2, "apiurl");
			return this;
		}

		public Criteria andAccesstimeIsNull() {
			addCriterion("accesstime is null");
			return this;
		}

		public Criteria andAccesstimeIsNotNull() {
			addCriterion("accesstime is not null");
			return this;
		}

		public Criteria andAccesstimeEqualTo(Date value) {
			addCriterion("accesstime =", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeNotEqualTo(Date value) {
			addCriterion("accesstime <>", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeGreaterThan(Date value) {
			addCriterion("accesstime >", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeGreaterThanOrEqualTo(Date value) {
			addCriterion("accesstime >=", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeLessThan(Date value) {
			addCriterion("accesstime <", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeLessThanOrEqualTo(Date value) {
			addCriterion("accesstime <=", value, "accesstime");
			return this;
		}

		public Criteria andAccesstimeIn(List<Date> values) {
			addCriterion("accesstime in", values, "accesstime");
			return this;
		}

		public Criteria andAccesstimeNotIn(List<Date> values) {
			addCriterion("accesstime not in", values, "accesstime");
			return this;
		}

		public Criteria andAccesstimeBetween(Date value1, Date value2) {
			addCriterion("accesstime between", value1, value2, "accesstime");
			return this;
		}

		public Criteria andAccesstimeNotBetween(Date value1, Date value2) {
			addCriterion("accesstime not between", value1, value2, "accesstime");
			return this;
		}
	}
}