package com.et59.cus.domain.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TPrizeExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public TPrizeExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    protected TPrizeExample(TPrizeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_prize
     *
     * @ibatorgenerated Mon Feb 16 17:46:03 CST 2015
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPrizeidIsNull() {
            addCriterion("prizeId is null");
            return this;
        }

        public Criteria andPrizeidIsNotNull() {
            addCriterion("prizeId is not null");
            return this;
        }

        public Criteria andPrizeidEqualTo(Long value) {
            addCriterion("prizeId =", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidNotEqualTo(Long value) {
            addCriterion("prizeId <>", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidGreaterThan(Long value) {
            addCriterion("prizeId >", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidGreaterThanOrEqualTo(Long value) {
            addCriterion("prizeId >=", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidLessThan(Long value) {
            addCriterion("prizeId <", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidLessThanOrEqualTo(Long value) {
            addCriterion("prizeId <=", value, "prizeid");
            return this;
        }

        public Criteria andPrizeidIn(List values) {
            addCriterion("prizeId in", values, "prizeid");
            return this;
        }

        public Criteria andPrizeidNotIn(List values) {
            addCriterion("prizeId not in", values, "prizeid");
            return this;
        }

        public Criteria andPrizeidBetween(Long value1, Long value2) {
            addCriterion("prizeId between", value1, value2, "prizeid");
            return this;
        }

        public Criteria andPrizeidNotBetween(Long value1, Long value2) {
            addCriterion("prizeId not between", value1, value2, "prizeid");
            return this;
        }

        public Criteria andPrizeforteachIsNull() {
            addCriterion("prizeForTeach is null");
            return this;
        }

        public Criteria andPrizeforteachIsNotNull() {
            addCriterion("prizeForTeach is not null");
            return this;
        }

        public Criteria andPrizeforteachEqualTo(String value) {
            addCriterion("prizeForTeach =", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachNotEqualTo(String value) {
            addCriterion("prizeForTeach <>", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachGreaterThan(String value) {
            addCriterion("prizeForTeach >", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachGreaterThanOrEqualTo(String value) {
            addCriterion("prizeForTeach >=", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachLessThan(String value) {
            addCriterion("prizeForTeach <", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachLessThanOrEqualTo(String value) {
            addCriterion("prizeForTeach <=", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachLike(String value) {
            addCriterion("prizeForTeach like", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachNotLike(String value) {
            addCriterion("prizeForTeach not like", value, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachIn(List values) {
            addCriterion("prizeForTeach in", values, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachNotIn(List values) {
            addCriterion("prizeForTeach not in", values, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachBetween(String value1, String value2) {
            addCriterion("prizeForTeach between", value1, value2, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforteachNotBetween(String value1, String value2) {
            addCriterion("prizeForTeach not between", value1, value2, "prizeforteach");
            return this;
        }

        public Criteria andPrizeforresearchIsNull() {
            addCriterion("prizeForResearch is null");
            return this;
        }

        public Criteria andPrizeforresearchIsNotNull() {
            addCriterion("prizeForResearch is not null");
            return this;
        }

        public Criteria andPrizeforresearchEqualTo(String value) {
            addCriterion("prizeForResearch =", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchNotEqualTo(String value) {
            addCriterion("prizeForResearch <>", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchGreaterThan(String value) {
            addCriterion("prizeForResearch >", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchGreaterThanOrEqualTo(String value) {
            addCriterion("prizeForResearch >=", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchLessThan(String value) {
            addCriterion("prizeForResearch <", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchLessThanOrEqualTo(String value) {
            addCriterion("prizeForResearch <=", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchLike(String value) {
            addCriterion("prizeForResearch like", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchNotLike(String value) {
            addCriterion("prizeForResearch not like", value, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchIn(List values) {
            addCriterion("prizeForResearch in", values, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchNotIn(List values) {
            addCriterion("prizeForResearch not in", values, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchBetween(String value1, String value2) {
            addCriterion("prizeForResearch between", value1, value2, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforresearchNotBetween(String value1, String value2) {
            addCriterion("prizeForResearch not between", value1, value2, "prizeforresearch");
            return this;
        }

        public Criteria andPrizeforsocialIsNull() {
            addCriterion("prizeForSocial is null");
            return this;
        }

        public Criteria andPrizeforsocialIsNotNull() {
            addCriterion("prizeForSocial is not null");
            return this;
        }

        public Criteria andPrizeforsocialEqualTo(String value) {
            addCriterion("prizeForSocial =", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialNotEqualTo(String value) {
            addCriterion("prizeForSocial <>", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialGreaterThan(String value) {
            addCriterion("prizeForSocial >", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialGreaterThanOrEqualTo(String value) {
            addCriterion("prizeForSocial >=", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialLessThan(String value) {
            addCriterion("prizeForSocial <", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialLessThanOrEqualTo(String value) {
            addCriterion("prizeForSocial <=", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialLike(String value) {
            addCriterion("prizeForSocial like", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialNotLike(String value) {
            addCriterion("prizeForSocial not like", value, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialIn(List values) {
            addCriterion("prizeForSocial in", values, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialNotIn(List values) {
            addCriterion("prizeForSocial not in", values, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialBetween(String value1, String value2) {
            addCriterion("prizeForSocial between", value1, value2, "prizeforsocial");
            return this;
        }

        public Criteria andPrizeforsocialNotBetween(String value1, String value2) {
            addCriterion("prizeForSocial not between", value1, value2, "prizeforsocial");
            return this;
        }
    }
}