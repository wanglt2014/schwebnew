package com.et59.cus.domain.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BsAddressExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public BsAddressExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	protected BsAddressExample(BsAddressExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table bs_address
	 * @abatorgenerated
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andConsigneeIsNull() {
			addCriterion("consignee is null");
			return this;
		}

		public Criteria andConsigneeIsNotNull() {
			addCriterion("consignee is not null");
			return this;
		}

		public Criteria andConsigneeEqualTo(String value) {
			addCriterion("consignee =", value, "consignee");
			return this;
		}

		public Criteria andConsigneeNotEqualTo(String value) {
			addCriterion("consignee <>", value, "consignee");
			return this;
		}

		public Criteria andConsigneeGreaterThan(String value) {
			addCriterion("consignee >", value, "consignee");
			return this;
		}

		public Criteria andConsigneeGreaterThanOrEqualTo(String value) {
			addCriterion("consignee >=", value, "consignee");
			return this;
		}

		public Criteria andConsigneeLessThan(String value) {
			addCriterion("consignee <", value, "consignee");
			return this;
		}

		public Criteria andConsigneeLessThanOrEqualTo(String value) {
			addCriterion("consignee <=", value, "consignee");
			return this;
		}

		public Criteria andConsigneeLike(String value) {
			addCriterion("consignee like", value, "consignee");
			return this;
		}

		public Criteria andConsigneeNotLike(String value) {
			addCriterion("consignee not like", value, "consignee");
			return this;
		}

		public Criteria andConsigneeIn(List<String> values) {
			addCriterion("consignee in", values, "consignee");
			return this;
		}

		public Criteria andConsigneeNotIn(List<String> values) {
			addCriterion("consignee not in", values, "consignee");
			return this;
		}

		public Criteria andConsigneeBetween(String value1, String value2) {
			addCriterion("consignee between", value1, value2, "consignee");
			return this;
		}

		public Criteria andConsigneeNotBetween(String value1, String value2) {
			addCriterion("consignee not between", value1, value2, "consignee");
			return this;
		}

		public Criteria andAddressDetailIsNull() {
			addCriterion("address_detail is null");
			return this;
		}

		public Criteria andAddressDetailIsNotNull() {
			addCriterion("address_detail is not null");
			return this;
		}

		public Criteria andAddressDetailEqualTo(String value) {
			addCriterion("address_detail =", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailNotEqualTo(String value) {
			addCriterion("address_detail <>", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailGreaterThan(String value) {
			addCriterion("address_detail >", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailGreaterThanOrEqualTo(String value) {
			addCriterion("address_detail >=", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailLessThan(String value) {
			addCriterion("address_detail <", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailLessThanOrEqualTo(String value) {
			addCriterion("address_detail <=", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailLike(String value) {
			addCriterion("address_detail like", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailNotLike(String value) {
			addCriterion("address_detail not like", value, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailIn(List<String> values) {
			addCriterion("address_detail in", values, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailNotIn(List<String> values) {
			addCriterion("address_detail not in", values, "addressDetail");
			return this;
		}

		public Criteria andAddressDetailBetween(String value1, String value2) {
			addCriterion("address_detail between", value1, value2,
					"addressDetail");
			return this;
		}

		public Criteria andAddressDetailNotBetween(String value1, String value2) {
			addCriterion("address_detail not between", value1, value2,
					"addressDetail");
			return this;
		}

		public Criteria andTelephoneIsNull() {
			addCriterion("telephone is null");
			return this;
		}

		public Criteria andTelephoneIsNotNull() {
			addCriterion("telephone is not null");
			return this;
		}

		public Criteria andTelephoneEqualTo(String value) {
			addCriterion("telephone =", value, "telephone");
			return this;
		}

		public Criteria andTelephoneNotEqualTo(String value) {
			addCriterion("telephone <>", value, "telephone");
			return this;
		}

		public Criteria andTelephoneGreaterThan(String value) {
			addCriterion("telephone >", value, "telephone");
			return this;
		}

		public Criteria andTelephoneGreaterThanOrEqualTo(String value) {
			addCriterion("telephone >=", value, "telephone");
			return this;
		}

		public Criteria andTelephoneLessThan(String value) {
			addCriterion("telephone <", value, "telephone");
			return this;
		}

		public Criteria andTelephoneLessThanOrEqualTo(String value) {
			addCriterion("telephone <=", value, "telephone");
			return this;
		}

		public Criteria andTelephoneLike(String value) {
			addCriterion("telephone like", value, "telephone");
			return this;
		}

		public Criteria andTelephoneNotLike(String value) {
			addCriterion("telephone not like", value, "telephone");
			return this;
		}

		public Criteria andTelephoneIn(List<String> values) {
			addCriterion("telephone in", values, "telephone");
			return this;
		}

		public Criteria andTelephoneNotIn(List<String> values) {
			addCriterion("telephone not in", values, "telephone");
			return this;
		}

		public Criteria andTelephoneBetween(String value1, String value2) {
			addCriterion("telephone between", value1, value2, "telephone");
			return this;
		}

		public Criteria andTelephoneNotBetween(String value1, String value2) {
			addCriterion("telephone not between", value1, value2, "telephone");
			return this;
		}

		public Criteria andPostcodeIsNull() {
			addCriterion("postcode is null");
			return this;
		}

		public Criteria andPostcodeIsNotNull() {
			addCriterion("postcode is not null");
			return this;
		}

		public Criteria andPostcodeEqualTo(String value) {
			addCriterion("postcode =", value, "postcode");
			return this;
		}

		public Criteria andPostcodeNotEqualTo(String value) {
			addCriterion("postcode <>", value, "postcode");
			return this;
		}

		public Criteria andPostcodeGreaterThan(String value) {
			addCriterion("postcode >", value, "postcode");
			return this;
		}

		public Criteria andPostcodeGreaterThanOrEqualTo(String value) {
			addCriterion("postcode >=", value, "postcode");
			return this;
		}

		public Criteria andPostcodeLessThan(String value) {
			addCriterion("postcode <", value, "postcode");
			return this;
		}

		public Criteria andPostcodeLessThanOrEqualTo(String value) {
			addCriterion("postcode <=", value, "postcode");
			return this;
		}

		public Criteria andPostcodeLike(String value) {
			addCriterion("postcode like", value, "postcode");
			return this;
		}

		public Criteria andPostcodeNotLike(String value) {
			addCriterion("postcode not like", value, "postcode");
			return this;
		}

		public Criteria andPostcodeIn(List<String> values) {
			addCriterion("postcode in", values, "postcode");
			return this;
		}

		public Criteria andPostcodeNotIn(List<String> values) {
			addCriterion("postcode not in", values, "postcode");
			return this;
		}

		public Criteria andPostcodeBetween(String value1, String value2) {
			addCriterion("postcode between", value1, value2, "postcode");
			return this;
		}

		public Criteria andPostcodeNotBetween(String value1, String value2) {
			addCriterion("postcode not between", value1, value2, "postcode");
			return this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("userid is null");
			return this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userid is not null");
			return this;
		}

		public Criteria andUseridEqualTo(String value) {
			addCriterion("userid =", value, "userid");
			return this;
		}

		public Criteria andUseridNotEqualTo(String value) {
			addCriterion("userid <>", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThan(String value) {
			addCriterion("userid >", value, "userid");
			return this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(String value) {
			addCriterion("userid >=", value, "userid");
			return this;
		}

		public Criteria andUseridLessThan(String value) {
			addCriterion("userid <", value, "userid");
			return this;
		}

		public Criteria andUseridLessThanOrEqualTo(String value) {
			addCriterion("userid <=", value, "userid");
			return this;
		}

		public Criteria andUseridLike(String value) {
			addCriterion("userid like", value, "userid");
			return this;
		}

		public Criteria andUseridNotLike(String value) {
			addCriterion("userid not like", value, "userid");
			return this;
		}

		public Criteria andUseridIn(List<String> values) {
			addCriterion("userid in", values, "userid");
			return this;
		}

		public Criteria andUseridNotIn(List<String> values) {
			addCriterion("userid not in", values, "userid");
			return this;
		}

		public Criteria andUseridBetween(String value1, String value2) {
			addCriterion("userid between", value1, value2, "userid");
			return this;
		}

		public Criteria andUseridNotBetween(String value1, String value2) {
			addCriterion("userid not between", value1, value2, "userid");
			return this;
		}

		public Criteria andAddressHeadIsNull() {
			addCriterion("address_head is null");
			return this;
		}

		public Criteria andAddressHeadIsNotNull() {
			addCriterion("address_head is not null");
			return this;
		}

		public Criteria andAddressHeadEqualTo(String value) {
			addCriterion("address_head =", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadNotEqualTo(String value) {
			addCriterion("address_head <>", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadGreaterThan(String value) {
			addCriterion("address_head >", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadGreaterThanOrEqualTo(String value) {
			addCriterion("address_head >=", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadLessThan(String value) {
			addCriterion("address_head <", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadLessThanOrEqualTo(String value) {
			addCriterion("address_head <=", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadLike(String value) {
			addCriterion("address_head like", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadNotLike(String value) {
			addCriterion("address_head not like", value, "addressHead");
			return this;
		}

		public Criteria andAddressHeadIn(List<String> values) {
			addCriterion("address_head in", values, "addressHead");
			return this;
		}

		public Criteria andAddressHeadNotIn(List<String> values) {
			addCriterion("address_head not in", values, "addressHead");
			return this;
		}

		public Criteria andAddressHeadBetween(String value1, String value2) {
			addCriterion("address_head between", value1, value2, "addressHead");
			return this;
		}

		public Criteria andAddressHeadNotBetween(String value1, String value2) {
			addCriterion("address_head not between", value1, value2,
					"addressHead");
			return this;
		}

		public Criteria andIsdefaultIsNull() {
			addCriterion("isdefault is null");
			return this;
		}

		public Criteria andIsdefaultIsNotNull() {
			addCriterion("isdefault is not null");
			return this;
		}

		public Criteria andIsdefaultEqualTo(String value) {
			addCriterion("isdefault =", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultNotEqualTo(String value) {
			addCriterion("isdefault <>", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultGreaterThan(String value) {
			addCriterion("isdefault >", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultGreaterThanOrEqualTo(String value) {
			addCriterion("isdefault >=", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultLessThan(String value) {
			addCriterion("isdefault <", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultLessThanOrEqualTo(String value) {
			addCriterion("isdefault <=", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultLike(String value) {
			addCriterion("isdefault like", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultNotLike(String value) {
			addCriterion("isdefault not like", value, "isdefault");
			return this;
		}

		public Criteria andIsdefaultIn(List<String> values) {
			addCriterion("isdefault in", values, "isdefault");
			return this;
		}

		public Criteria andIsdefaultNotIn(List<String> values) {
			addCriterion("isdefault not in", values, "isdefault");
			return this;
		}

		public Criteria andIsdefaultBetween(String value1, String value2) {
			addCriterion("isdefault between", value1, value2, "isdefault");
			return this;
		}

		public Criteria andIsdefaultNotBetween(String value1, String value2) {
			addCriterion("isdefault not between", value1, value2, "isdefault");
			return this;
		}
	}
}