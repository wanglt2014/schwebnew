<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="open_api">
  <resultMap class="com.et59.cus.domain.entity.OpenApi" id="abatorgenerated_OpenApiResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="apiurl" jdbcType="VARCHAR" property="apiurl" />
    <result column="apitype" jdbcType="VARCHAR" property="apitype" />
    <result column="httptype" jdbcType="VARCHAR" property="httptype" />
    <result column="parent" jdbcType="BIGINT" property="parent" />
  </resultMap>
  <resultMap class="com.et59.cus.domain.entity.OpenApi" extends="open_api.abatorgenerated_OpenApiResult" id="abatorgenerated_OpenApiResultWithBLOBs">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <result column="apidesc" jdbcType="LONGVARCHAR" property="apidesc" />
  </resultMap>
  <sql id="abatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="abatorgenerated_selectByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenApi" resultMap="abatorgenerated_OpenApiResultWithBLOBs">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select id, text, apiurl, apitype, httptype, parent, apidesc
    from open_api
    where id = #id:BIGINT#
  </select>
  <select id="abatorgenerated_selectByExample" parameterClass="com.et59.cus.domain.entity.OpenApiExample" resultMap="abatorgenerated_OpenApiResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select id, text, apiurl, apitype, httptype, parent
    from open_api
    <isParameterPresent>
      <include refid="open_api.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="abatorgenerated_selectByExampleWithBLOBs" parameterClass="com.et59.cus.domain.entity.OpenApiExample" resultMap="abatorgenerated_OpenApiResultWithBLOBs">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select id, text, apiurl, apitype, httptype, parent, apidesc
    from open_api
    <isParameterPresent>
      <include refid="open_api.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenApi">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    delete from open_api
    where id = #id:BIGINT#
  </delete>
  <delete id="abatorgenerated_deleteByExample" parameterClass="com.et59.cus.domain.entity.OpenApiExample">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    delete from open_api
    <include refid="open_api.abatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="abatorgenerated_insert" parameterClass="com.et59.cus.domain.entity.OpenApi">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    insert into open_api (id, text, apiurl, apitype, httptype, parent, apidesc)
    values (#id:BIGINT#, #text:VARCHAR#, #apiurl:VARCHAR#, #apitype:VARCHAR#, #httptype:VARCHAR#,
      #parent:BIGINT#, #apidesc:LONGVARCHAR#)
  </insert>
  <update id="abatorgenerated_updateByPrimaryKeyWithBLOBs" parameterClass="com.et59.cus.domain.entity.OpenApi">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    set text = #text:VARCHAR#,
      apiurl = #apiurl:VARCHAR#,
      apitype = #apitype:VARCHAR#,
      httptype = #httptype:VARCHAR#,
      parent = #parent:BIGINT#,
      apidesc = #apidesc:LONGVARCHAR#
    where id = #id:BIGINT#
  </update>
  <update id="abatorgenerated_updateByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenApi">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    set text = #text:VARCHAR#,
      apiurl = #apiurl:VARCHAR#,
      apitype = #apitype:VARCHAR#,
      httptype = #httptype:VARCHAR#,
      parent = #parent:BIGINT#
    where id = #id:BIGINT#
  </update>
  <update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.et59.cus.domain.entity.OpenApi">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    <dynamic prepend="set">
      <isNotNull prepend="," property="text">
        text = #text:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="apiurl">
        apiurl = #apiurl:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="apitype">
        apitype = #apitype:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="httptype">
        httptype = #httptype:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="parent">
        parent = #parent:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="apidesc">
        apidesc = #apidesc:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <select id="abatorgenerated_countByExample" parameterClass="com.et59.cus.domain.entity.OpenApiExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select count(*) from open_api
    <include refid="open_api.abatorgenerated_Example_Where_Clause" />
  </select>
  <update id="abatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.text">
        text = #record.text:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.apiurl">
        apiurl = #record.apiurl:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.apitype">
        apitype = #record.apitype:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.httptype">
        httptype = #record.httptype:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.parent">
        parent = #record.parent:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.apidesc">
        apidesc = #record.apidesc:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="open_api.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="abatorgenerated_updateByExampleWithBLOBs">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    set id = #record.id:BIGINT#,
      text = #record.text:VARCHAR#,
      apiurl = #record.apiurl:VARCHAR#,
      apitype = #record.apitype:VARCHAR#,
      httptype = #record.httptype:VARCHAR#,
      parent = #record.parent:BIGINT#,
      apidesc = #record.apidesc:LONGVARCHAR#
    <isParameterPresent>
      <include refid="open_api.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="abatorgenerated_updateByExample">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_api
    set id = #record.id:BIGINT#,
      text = #record.text:VARCHAR#,
      apiurl = #record.apiurl:VARCHAR#,
      apitype = #record.apitype:VARCHAR#,
      httptype = #record.httptype:VARCHAR#,
      parent = #record.parent:BIGINT#
    <isParameterPresent>
      <include refid="open_api.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>