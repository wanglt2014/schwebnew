<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="open_oauth">
  <resultMap class="com.et59.cus.domain.entity.OpenOauth" id="abatorgenerated_OpenOauthResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="appid" jdbcType="BIGINT" property="appid" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="access_auth" jdbcType="VARCHAR" property="accessAuth" />
    <result column="token_expires" jdbcType="BIGINT" property="tokenExpires" />
    <result column="code_isactive" jdbcType="VARCHAR" property="codeIsactive" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="token_isactive" jdbcType="VARCHAR" property="tokenIsactive" />
  </resultMap>
  <sql id="abatorgenerated_Example_Where_Clause">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="abatorgenerated_selectByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenOauth" resultMap="abatorgenerated_OpenOauthResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select id, code, access_token, appid, userid, access_auth, token_expires, code_isactive, uptime,
      token_isactive
    from open_oauth
    where id = #id:BIGINT#
  </select>
  <select id="abatorgenerated_selectByExample" parameterClass="com.et59.cus.domain.entity.OpenOauthExample" resultMap="abatorgenerated_OpenOauthResult">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select id, code, access_token, appid, userid, access_auth, token_expires, code_isactive, uptime,
      token_isactive
    from open_oauth
    <isParameterPresent>
      <include refid="open_oauth.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenOauth">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    delete from open_oauth
    where id = #id:BIGINT#
  </delete>
  <delete id="abatorgenerated_deleteByExample" parameterClass="com.et59.cus.domain.entity.OpenOauthExample">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    delete from open_oauth
    <include refid="open_oauth.abatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="abatorgenerated_insert" parameterClass="com.et59.cus.domain.entity.OpenOauth">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    insert into open_oauth (id, code, access_token, appid, userid, access_auth, token_expires,
      code_isactive, uptime, token_isactive)
    values (#id:BIGINT#, #code:VARCHAR#, #accessToken:VARCHAR#, #appid:BIGINT#, #userid:VARCHAR#,
      #accessAuth:VARCHAR#, #tokenExpires:BIGINT#, #codeIsactive:VARCHAR#, #uptime:TIMESTAMP#,
      #tokenIsactive:VARCHAR#)
  </insert>
  <update id="abatorgenerated_updateByPrimaryKey" parameterClass="com.et59.cus.domain.entity.OpenOauth">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_oauth
    set code = #code:VARCHAR#,
      access_token = #accessToken:VARCHAR#,
      appid = #appid:BIGINT#,
      userid = #userid:VARCHAR#,
      access_auth = #accessAuth:VARCHAR#,
      token_expires = #tokenExpires:BIGINT#,
      code_isactive = #codeIsactive:VARCHAR#,
      uptime = #uptime:TIMESTAMP#,
      token_isactive = #tokenIsactive:VARCHAR#
    where id = #id:BIGINT#
  </update>
  <update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.et59.cus.domain.entity.OpenOauth">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_oauth
    <dynamic prepend="set">
      <isNotNull prepend="," property="code">
        code = #code:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="accessToken">
        access_token = #accessToken:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="appid">
        appid = #appid:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="userid">
        userid = #userid:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="accessAuth">
        access_auth = #accessAuth:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="tokenExpires">
        token_expires = #tokenExpires:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="codeIsactive">
        code_isactive = #codeIsactive:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="uptime">
        uptime = #uptime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="tokenIsactive">
        token_isactive = #tokenIsactive:VARCHAR#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <select id="abatorgenerated_countByExample" parameterClass="com.et59.cus.domain.entity.OpenOauthExample" resultClass="java.lang.Integer">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    select count(*) from open_oauth
    <include refid="open_oauth.abatorgenerated_Example_Where_Clause" />
  </select>
  <update id="abatorgenerated_updateByExampleSelective">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_oauth
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.code">
        code = #record.code:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.accessToken">
        access_token = #record.accessToken:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.appid">
        appid = #record.appid:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.userid">
        userid = #record.userid:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.accessAuth">
        access_auth = #record.accessAuth:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.tokenExpires">
        token_expires = #record.tokenExpires:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.codeIsactive">
        code_isactive = #record.codeIsactive:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.uptime">
        uptime = #record.uptime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.tokenIsactive">
        token_isactive = #record.tokenIsactive:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="open_oauth.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="abatorgenerated_updateByExample">
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
    -->
    update open_oauth
    set id = #record.id:BIGINT#,
      code = #record.code:VARCHAR#,
      access_token = #record.accessToken:VARCHAR#,
      appid = #record.appid:BIGINT#,
      userid = #record.userid:VARCHAR#,
      access_auth = #record.accessAuth:VARCHAR#,
      token_expires = #record.tokenExpires:BIGINT#,
      code_isactive = #record.codeIsactive:VARCHAR#,
      uptime = #record.uptime:TIMESTAMP#,
      token_isactive = #record.tokenIsactive:VARCHAR#
    <isParameterPresent>
      <include refid="open_oauth.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>